/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(root==p||root==q) return root;
        else if(root.val>Math.min(p.val,q.val)&&root.val<Math.max(p.val,q.val)) return root;
        else if(root.val>Math.max(p.val,q.val)) return lowestCommonAncestor(root.left,p,q);
        else return lowestCommonAncestor(root.right,p,q);
    }
    
}
 
public class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(root==p||root==q) return root;
        else if((isAncestor(root.left,p)&&isAncestor(root.right,q))||(isAncestor(root.left,q)&&isAncestor(root.right,p))) return root;
        else{
            if(isAncestor(root.left,p)) return lowestCommonAncestor(root.left,p,q);
            else return lowestCommonAncestor(root.right,p,q);
        }
    }
    
    public boolean isAncestor(TreeNode root, TreeNode p){
        if(root==null) return false;
        else if(root==p) return true;
        else return isAncestor(root.left,p)||isAncestor(root.right,p);
    }
}