public class Solution {
    public int lengthOfLongestSubstring(String s) {
        Set<Character> inSubstring = new HashSet<Character>();
        int left = 0, right = 0;
        int maxLength = 0, currLength = 0;
        while(right<s.length()){
            if(!inSubstring.contains(s.charAt(right))){
                inSubstring.add(s.charAt(right));
                currLength++;
                right++;
                if(currLength>maxLength) maxLength = currLength;
            }
            else{
                currLength++; //don't forget this line. each iteration we must add the new element and then consider the repeating.
                while(s.charAt(left)!=s.charAt(right)){
                    inSubstring.remove(s.charAt(left));
                    left++;
                    currLength--;
                }
                left++;
                currLength--;
                right++;
            }
        }
        return maxLength;
    }
}