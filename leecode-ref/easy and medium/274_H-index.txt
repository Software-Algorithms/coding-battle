public class Solution {
    public int hIndex(int[] citations) {
        int n = citations.length;
        int[] indexs = new int[n+1];
        for(int i = 0; i < n; i++) {
            if(citations[i]>=n) indexs[n]++; 
            else indexs[citations[i]]++;
        }
        for(int j = n; j >= 0; j--) {
            if(indexs[j] >= j) return j;
            if(j!=0) indexs[j-1] += indexs[j];
        }
        return 0;
    }
}

/*
public class Solution {
    public int hIndex(int[] citations) {
        int n = citations.length;
        int[] indexs = new int[n];
        for(int i = 0; i < n; i++) {
            if(citations[i]>=n) indexs[n-1]++; 
            else if(citations[i]>0) indexs[citations[i]-1]++;
        }
        for(int j = n-1; j >= 0; j--) {
            if(indexs[j] >= j+1) return j+1;
            if(j!=0) indexs[j-1] += indexs[j];
        }
        return 0;
    }
}
*/

public class Solution {
    public int hIndex(int[] citations) {
        Arrays.sort(citations);
        int res = 0, a = 0, b = citations.length-1, n = citations.length;
        while(a<=b) {
            int mid = a + (b-a)/2;
            if(n-mid >= citations[mid]) {
                res = Math.max(res, citations[mid]);
                a = mid + 1;
            }
            else {
                res = Math.max(res, n-mid);
                b = mid - 1;
            }
        }
        return res;
    }
}