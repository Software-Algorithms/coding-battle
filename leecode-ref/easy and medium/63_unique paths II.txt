public class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int m = obstacleGrid.length, n = obstacleGrid[0].length;
        int[][] paths = new int[m][n];
        for(int i = 0;i<m;i++){
            if(obstacleGrid[i][0]!=1) paths[i][0] = 1;
            else{
                for(int j = i;j<m;j++) paths[i][0] = 0;
                break;
            }
        } 
        for(int i = 0;i<m;i++){
            if(obstacleGrid[i][0]!=1) paths[i][0] = 1;
            else{
                for(int j = i;j<m;j++) paths[j][0] = 0;
                break;
            }
        } 
        for(int i = 0;i<n;i++){
            if(obstacleGrid[0][i]!=1) paths[0][i] = 1;
            else{
                for(int j = i;j<n;j++) paths[0][j] = 0;
                break;
            }
        }
        for(int i = 1;i<m;i++){
            for(int j = 1;j<n;j++){
                if(obstacleGrid[i][j]==1) paths[i][j] = 0;
                else paths[i][j] = paths[i-1][j] + paths[i][j-1];
            }
        }
        return paths[m-1][n-1];
        
        
    }
}