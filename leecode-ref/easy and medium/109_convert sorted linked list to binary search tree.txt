/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode sortedListToBST(ListNode head) {
        if(head==null) return null;
        else{
            int length = 0;
            ListNode ln = head;
            while(ln!=null){
                length++;
                ln = ln.next;
            }
            ln = head;
            int[] list = new int[length];
            for(int i = 0;i<length;i++){
                list[i] = ln.val;
                ln = ln.next;
            }
            return sortedListToBST(list,0,list.length-1);
        }
    }
    
    public TreeNode sortedListToBST(int[] list, int a, int b){
        if(a>b) return null;
        else if(a==b){
            TreeNode tn = new TreeNode(list[a]);
            return tn;
        }
        else{
            TreeNode tn = new TreeNode(list[(a+b)/2]);
            tn.left = sortedListToBST(list,a,(a+b)/2-1);
            tn.right = sortedListToBST(list,(a+b)/2+1,b);
            return tn;
        }
    }
}