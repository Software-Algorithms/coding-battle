/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode slow = head, fast = head, firstPartHead = null;
        while(fast!=null&&fast.next!=null){ //reverse first part.
            fast = fast.next.next;
            ListNode tmp = slow.next;
            slow.next = firstPartHead;
            firstPartHead = slow;
            slow = tmp;
        }
        if(fast!=null){ //if length is odd, move slow from mid to mid+1 pos.
            slow = slow.next;
        }
        while(slow!=null){ 
            if(slow.val!=firstPartHead.val) return false;
            slow = slow.next;
            firstPartHead = firstPartHead.next;
        }
        return true;
        
    }
}