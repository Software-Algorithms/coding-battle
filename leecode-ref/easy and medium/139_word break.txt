//DP
public class Solution {
    public boolean wordBreak(String s, Set<String> wordDict) {
        if(wordDict.contains(s)) return true;
        else{
            List<Integer> reachable = new ArrayList<Integer>();
            reachable.add(0);
            for(int i=0;i<s.length();i++){
                for(int j:reachable){
                    if(wordDict.contains(s.substring(j,i+1))){
                        reachable.add(i+1);
                        break;
                    } 
                }
            }
            if(reachable.get(reachable.size()-1)==s.length()) return true;
            else return false;
        }
    }
}


/*public class Solution {
    public boolean wordBreak(String s, Set<String> wordDict) {
        if(wordDict.contains(s)) return true;
        else{
            for(int i =1;i<s.length();i++){
                if(wordDict.contains(s.substring(0,i))&&wordBreak(s.substring(i,s.length()),wordDict)) return true;
                else continue;
            }
        }
        return false;
    }
}*/