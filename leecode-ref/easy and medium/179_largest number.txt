public class Solution {
    public String largestNumber(int[] nums) {
        sort(nums,0,nums.length-1);
        if(nums[nums.length-1]==0) return "0";
        StringBuilder strbd = new StringBuilder();
        for(int i=nums.length-1;i>=0;i--) strbd.append(String.valueOf(nums[i]));
        return strbd.toString();
    }
    public int compare(int a, int b){
        String strA = String.valueOf(a), strB = String.valueOf(b);
        String strAB = strA+strB, strBA = strB+strA;
        return strAB.compareTo(strBA);
    }
    public void sort(int[] arr,int low,int high){
		int l=low;
		int h=high;
		int povit=arr[low];		 
		while(l<h){
			while(l<h&&compare(arr[h],povit)>=0) h--;
			if(l<h){
			int temp=arr[h];
			arr[h]=arr[l];
			arr[l]=temp;
			l++;
			}
			while(l<h&&compare(arr[l],povit)<=0) l++;	 
			if(l<h){
				int temp=arr[h];
				arr[h]=arr[l];
				arr[l]=temp;
				h--;
			}
		}
		if(l>low)sort(arr,low,l-1);
		if(h<high)sort(arr,l+1,high);
	}
    
}