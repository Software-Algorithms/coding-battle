public class Solution {
    public List<List<String>> partition(String s) {
    	List<List<String>> res = new ArrayList<List<String>>();
    	partition(s,res,new ArrayList<String>(),0);
    	return res;
    }
    
    public void partition(String s, List<List<String>> res, List<String> curr, int start){
    	if(start==s.length()) res.add(new ArrayList<String>(curr));
    	else{
    		for(int i=start;i<s.length();i++){
    			if(isPalindrome(s,start,i)){
    				curr.add(s.substring(start, i+1));			
    				partition(s,res,curr,i+1);
    				curr.remove(curr.size()-1);
    			}    			
    		}
    	}
    }

    public boolean isPalindrome(String s, int begin, int end){
        while(begin<end){
            if(s.charAt(begin++)!=s.charAt(end--)) return false;
        }
        return true;
    }
}