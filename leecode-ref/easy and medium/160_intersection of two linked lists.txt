/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if(headA==null||headB==null) return null;
        else{
            ListNode first = headA, second = headB;
            int lengthA = 1, lengthB = 1;
            while(first!=null&&first.next!=null){
                lengthA++;
                first = first.next;
            }
            while(second!=null&&second.next!=null){
                lengthB++;
                second = second.next;
            }
            if(first!=second) return null;
            else{
                first = headA;
                second = headB;
                if(lengthA>lengthB) for(int i=0;i<lengthA-lengthB;i++) first = first.next;
                else for(int i=0;i<lengthB-lengthA;i++) second = second.next;
                while(first!=second){
                    first = first.next;
                    second = second.next;
                }
                return first;
            }
            
        }
        
    }
}