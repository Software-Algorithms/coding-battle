package leecode;

class Solution_spiralMatrixII {
    public int[][] generateMatrix(int n) {
    	if(n==0) return null;
    	else{
        int[][] spiralMatrix = new int[n][n];
        int rounds = 1;
        int i=0, j=0;
        while(rounds!= (n*n+1)){ // if write as while(rounds++ != (n*n+1)), rounds++ comes after the condition checking and before inside code
        	spiralMatrix[i][j] = rounds;
        	if(i>=j&&(i+j)>n-1) j--; // bottom section
        	else if((i-j)==1&&(i+j)!=n-1&&(i+j)<n-1) j++; // loop point
        	else if(i>j&&(i+j)<=n-1) i--; //left section 
        	else if(i<=j&&(i+j)<n-1) j++; //top section
        	else if(i<j&&(i+j)>=n-1) i++; // right section
        	rounds++;
        }
        return spiralMatrix;
    	}
    }
}

public class spiralMatrixII {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Solution_spiralMatrixII sol = new Solution_spiralMatrixII();
		int[][] test = sol.generateMatrix(4);
		for(int[] i:test){
			for(int j:i){
				System.out.print(j+"  ");
			}
			System.out.println();
		}
	}

}
